version: "3"

services:
    nginx:
        image: nginx:latest
        #     # build: ./nginx # location of the dockerfile that defines the nginx image. The dockerfile will be used to spin up an image during the build stage
        container_name: blog_app_nginx
        ports:
            - 5000:8080 # 1339:80 map the external port 1339 to the internal port 80. Any traffic from 1339 externally will be passed to port 80 of the NGINX container. To access this app, one would use an address such as 0.0.0.0:1339
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
            - react_build:/var/www/react
            - static_vol:/backend/staticbe
            - ./nginx/nginxlogs:/var/log/nginx/
        depends_on:
            - backend
            - frontend

    backend:
        build: ./Django
        # command: bash -c "./wait-for-it.sh localhost:5432 --timeout=1 --strict -- echo 'db_up' && python manage.py makemigrations && python manage.py migrate "
        # command: bash -c "./wait-for-it.sh localhost:5432 --timeout=1 --strict -- echo 'db_up' && python manage.py makemigrations && python manage.py migrate gunicorn core.wsgi --bind 0.0.0.0:8000"
        container_name: blog_app_backend
        image: django_blog_app_backend
        restart: "on-failure"
        ports:
            - "8000:8000"
        volumes:
            - static_vol:/backend/static

        #     #     - ./Django:/backend
        #     #     - .data/web:/vol/web #for dev only to check files
        #     # # env_file: # file where env variables are stored. Used as best practice so as not to expose secret keys
        #     # #     - /Django/
        #     # environment:
        #     #     - SECRET_KEY=devsecretkey
        #     #     - DEBUG=1
        #     #     - DB_HOST=db
        #     #     - DB_USER=postgres
        #     #     - DB_NAME=postgres
        #     #     - DB_PASS=postgres

        expose:
            - 8000
        depends_on:
            - db

    frontend:
        build: ./reactclient
        container_name: blog_app_frontend
        image: django_blog_app_frontend
        depends_on:
            - backend
        volumes:
            - react_build:/app/build

    db:
        image: postgres
        container_name: blog_app_db
        # volumes:
        #     - ./data/db:/var/lib/postgresql/data
        environment:
            # - POSTGRES_DB=postgres
            # - POSTGRES_USER=postgres
            # - POSTGRES_PASSWORD=postgres
            - POSTGRES_HOST_AUTH_METHOD=trust
        expose:
            - 5432
        ports:
            - "5432:5432"
volumes:
    react_build:
    static_vol:
